{"version":3,"file":"index.es.js","sources":["../src/txLibInfo.js","../src/abcWalletTxLib-TRD.js"],"sourcesContent":["/* global */\n\nexport const txLibInfo = {\n  supportedTokens: ['ANA', 'DOGESHIT', 'CRAP'],\n\n  getInfo: {\n    // Details of supported currency\n    currencyCode: 'TRD', // The 3 character code for the currency\n    denominations: [\n      // An array of Objects of the possible denominations for this currency\n      {\n        name: 'shits', // The human readable string to describe the denomination\n        multiplier: 100, // The value to multiply the smallest unit of currency to get to the denomination\n        symbol: 'ƀ' // The human readable 1-3 character symbol of the currency, e.g “Ƀ”\n      },\n      {\n        name: 'mTRD',\n        multiplier: 100000,\n        symbol: 'mɃ'\n      },\n      {\n        name: 'TRD',\n        multiplier: 100000000,\n        symbol: 'Ƀ'\n      }\n    ],\n    symbolImage: 'qq/2iuhfiu1/3iufhlq249r8yq34tiuhq4giuhaiwughiuaergih/rg', // Base64 encoded png or jpg image of the currency symbol (optional)\n    metaTokens: [\n      // Array of objects describing the supported metatokens\n      {\n        currencyCode: 'ANA',\n        denominations: [\n          {\n            name: 'ANA',\n            multiplier: 1\n          }\n        ],\n        symbolImage: 'fe/3fthfiu1/3iufhlq249r8yq34tiuhqggiuhaiwughiuaergih/ef'\n      },\n      {\n        currencyCode: 'DOGESHIT',\n        denominations: [\n          {\n            name: 'DOGESHIT',\n            multiplier: 1\n          }\n        ],\n        symbolImage: 'fe/3fthfiu1/3iufhlq249r8yq34tiuhqggiuhaiwughiuaergih/ef'\n      },\n      {\n        currencyCode: 'CRAP',\n        denominations: [\n          {\n            name: 'CRAP',\n            multiplier: 1\n          }\n        ],\n        symbolImage: 'qe/3fthfi2fg1/3iufhlq249r8yq34tiuhqggiuhaiwughiuaergih/ef'\n      }\n    ]\n  }\n}\n","// abcWalletTxLib-btc.js\nimport { base16 } from 'rfc4648'\n\n// const random = require('random-js')\nimport { txLibInfo } from './txLibInfo.js'\n\nconst GAP_LIMIT = 10\nconst DATA_STORE_FOLDER = 'txEngineFolder'\nconst ADDRESS_POLL_MILLISECONDS = 20000\nconst TRANSACTION_POLL_MILLISECONDS = 3000\nconst BLOCKHEIGHT_POLL_MILLISECONDS = 60000\nconst SAVE_DATASTORE_MILLISECONDS = 10000\n\nconst PRIMARY_CURRENCY = txLibInfo.getInfo.currencyCode\nconst TOKEN_CODES = [PRIMARY_CURRENCY].concat(txLibInfo.supportedTokens)\n\nconst baseUrl = 'http://shitcoin-az-braz.airbitz.co:8080/api/'\n// const baseUrl = 'http://localhost:8080/api/'\n\nexport const TxLibBTC = {\n  getInfo: () => {\n    const currencyDetails = txLibInfo.getInfo\n\n    return currencyDetails\n  },\n\n  createMasterKeys: (io, walletType) => {\n    if (walletType === 'shitcoin') {\n      const masterPrivateKey = base16.stringify(io.random(8))\n      const masterPublicKey = 'pub' + masterPrivateKey\n      return { masterPrivateKey, masterPublicKey }\n    } else {\n      return null\n    }\n  },\n\n  makeEngine: (abcTxLibAccess, options, callbacks) => {\n    const abcTxLib = new ABCTxLibTRD(abcTxLibAccess, options, callbacks)\n\n    return abcTxLib\n  }\n}\n\nclass WalletLocalData {\n  constructor (jsonString) {\n    this.blockHeight = 0\n    this.totalBalances = { TRD: 0 }\n\n    // Map of gap limit addresses\n    this.gapLimitAddresses = []\n    this.transactionsObj = {}\n\n    // Array of ABCTransaction objects sorted by date from newest to oldest\n    for (const n in TOKEN_CODES) {\n      const currencyCode = TOKEN_CODES[n]\n      this.transactionsObj[currencyCode] = []\n    }\n\n    // Array of txids to fetch\n    this.transactionsToFetch = []\n\n    // Array of address objects, unsorted\n    this.addressArray = []\n\n    this.unusedAddressIndex = 0\n    this.masterPublicKey = ''\n    this.enabledTokens = [PRIMARY_CURRENCY]\n    if (jsonString != null) {\n      const data = JSON.parse(jsonString)\n      for (const k in data) {\n        this[k] = data[k]\n      }\n    }\n  }\n}\n\nclass ABCTransaction {\n  constructor (\n    txid,\n    date,\n    currencyCode,\n    blockHeight,\n    amountSatoshi,\n    networkFee,\n    signedTx,\n    otherParams\n  ) {\n    this.txid = txid\n    this.date = date\n    this.currencyCode = currencyCode\n    this.blockHeight = blockHeight\n    this.amountSatoshi = amountSatoshi\n    this.networkFee = networkFee\n    this.signedTx = signedTx\n    this.otherParams = otherParams\n  }\n}\n\nclass ABCTxLibTRD {\n  constructor (abcTxLibAccess, options, callbacks) {\n    // dataStore.init(abcTxLibAccess, options, callbacks)\n    this.engineOn = false\n    this.transactionsDirty = true\n    this.addressesChecked = false\n    this.numAddressesChecked = 0\n    this.numAddressesToCheck = 0\n    this.abcTxLibCallbacks = callbacks\n    this.abcTxLibOptions = options\n    this.io = abcTxLibAccess.io\n    this.walletLocalDataStore = abcTxLibAccess.walletLocalDataStore\n    this.walletLocalData = {}\n    this.walletLocalDataDirty = false\n    this.transactionsChangedArray = []\n  }\n\n  // *************************************\n  // Private methods\n  // *************************************\n  engineLoop () {\n    this.engineOn = true\n    this.blockHeightInnerLoop()\n    this.checkAddressesInnerLoop()\n    this.checkTransactionsInnerLoop()\n    this.saveWalletDataStore()\n  }\n\n  isTokenEnabled (token) {\n    return this.walletLocalData.enabledTokens.indexOf(token) !== -1\n  }\n\n  fetchGet (cmd, params) {\n    return this.io.fetch(baseUrl + cmd + '/' + params, {\n      method: 'get'\n    })\n  }\n\n  fetchPost (cmd, body) {\n    return this.io.fetch(baseUrl + cmd, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(body)\n    })\n  }\n\n  // *************************************\n  // Poll on the blockheight\n  // *************************************\n  blockHeightInnerLoop () {\n    if (this.engineOn) {\n      const p = new Promise((resolve, reject) => {\n        this.fetchGet('height', '')\n          .then(function (response) {\n            return response.json()\n          })\n          .then(jsonObj => {\n            if (this.walletLocalData.blockHeight !== jsonObj.height) {\n              this.walletLocalData.blockHeight = jsonObj.height\n              this.walletLocalDataDirty = true\n              console.log(\n                'Block height changed: ' + this.walletLocalData.blockHeight\n              )\n              this.abcTxLibCallbacks.blockHeightChanged(\n                this.walletLocalData.blockHeight\n              )\n            }\n            resolve()\n          })\n          .catch(function (err) {\n            console.log('Error fetching height: ' + err)\n            resolve()\n          })\n      })\n      p.then(() => {\n        setTimeout(() => {\n          this.blockHeightInnerLoop()\n        }, BLOCKHEIGHT_POLL_MILLISECONDS)\n      })\n    }\n  }\n\n  checkTransactionsInnerLoop () {\n    if (this.engineOn) {\n      var promiseArray = []\n      const numTransactions = this.walletLocalData.transactionsToFetch.length\n\n      for (var n = 0; n < numTransactions; n++) {\n        const txid = this.walletLocalData.transactionsToFetch[n]\n        const p = this.processTransactionFromServer(txid)\n        promiseArray.push(p)\n        console.log('checkTransactionsInnerLoop: check ' + txid)\n      }\n\n      if (promiseArray.length > 0) {\n        Promise.all(promiseArray)\n          .then(response => {\n            setTimeout(() => {\n              this.checkTransactionsInnerLoop()\n            }, TRANSACTION_POLL_MILLISECONDS)\n          })\n          .catch(e => {\n            console.log(\n              new Error(\n                'Error: checkTransactionsInnerLoop: should not get here'\n              )\n            )\n            setTimeout(() => {\n              this.checkTransactionsInnerLoop()\n            }, TRANSACTION_POLL_MILLISECONDS)\n          })\n      } else {\n        setTimeout(() => {\n          this.checkTransactionsInnerLoop()\n        }, TRANSACTION_POLL_MILLISECONDS)\n      }\n    }\n  }\n\n  processTransactionFromServer (txid) {\n    return this.fetchGet('transaction', txid)\n      .then(function (response) {\n        return response.json()\n      })\n      .then(jsonObj => {\n        console.log('processTransactionFromServer: response.json():')\n        console.log(jsonObj)\n\n        //\n        // Calculate the amount sent from the wallet\n        //\n\n        // Iterate through all the inputs and see if any are in our wallet\n        let spendAmounts = []\n        let receiveAmounts = []\n        let amountsSatoshi = []\n\n        const inputs = jsonObj.inputs\n        const outputs = jsonObj.outputs\n\n        const otherParams = {\n          inputs,\n          outputs\n        }\n\n        for (const c in TOKEN_CODES) {\n          const currencyCode = TOKEN_CODES[c]\n          receiveAmounts[currencyCode] = spendAmounts[currencyCode] = 0\n\n          for (var n in inputs) {\n            const input = inputs[n]\n            const addr = input.address\n            const ccode = input.currencyCode\n            const idx = this.findAddress(addr)\n            if (idx !== -1 && ccode === currencyCode) {\n              spendAmounts[ccode] += input.amount\n            }\n          }\n\n          // Iterate through all the outputs and see if any are in our wallet\n          for (let n in outputs) {\n            const output = outputs[n]\n            const addr = output.address\n            const ccode = output.currencyCode\n            const idx = this.findAddress(addr)\n            if (idx !== -1 && ccode === currencyCode) {\n              receiveAmounts[ccode] += output.amount\n            }\n          }\n          amountsSatoshi[currencyCode] =\n            receiveAmounts[currencyCode] - spendAmounts[currencyCode]\n\n          // Create a txlib ABCTransaction object which must contain\n          // txid, date, blockHeight, amountSatoshi, networkFee, signedTx, and optionally otherParams\n          /*\n          let networkFee = jsonObj.networkFee\n          if (currencyCode != PRIMARY_CURRENCY) {\n            networkFee = 0\n          }\n          */\n\n          if (\n            receiveAmounts[currencyCode] !== 0 ||\n            spendAmounts[currencyCode] !== 0\n          ) {\n            var abcTransaction = new ABCTransaction(\n              jsonObj.txid,\n              jsonObj.txDate,\n              currencyCode,\n              jsonObj.blockHeight,\n              amountsSatoshi[currencyCode],\n              jsonObj.networkFee,\n              'iwassignedyoucantrustme',\n              otherParams\n            )\n            this.addTransaction(currencyCode, abcTransaction)\n          }\n        }\n\n        // Remove txid from transactionsToFetch\n        const idx = this.walletLocalData.transactionsToFetch.indexOf(\n          jsonObj.txid\n        )\n        if (idx !== -1) {\n          this.walletLocalData.transactionsToFetch.splice(idx, 1)\n          this.walletLocalDataDirty = true\n        }\n\n        if (this.walletLocalData.transactionsToFetch.length === 0) {\n          this.abcTxLibCallbacks.transactionsChanged(\n            this.transactionsChangedArray\n          )\n          this.transactionsChangedArray = []\n        }\n\n        return 0\n      })\n      .catch(e => {\n        console.log('Error fetching address')\n        return 0\n      })\n  }\n\n  // **********************************************\n  // Check all addresses for new transactions\n  // **********************************************\n  checkAddressesInnerLoop () {\n    if (this.engineOn) {\n      var promiseArray = []\n      // var promiseArrayCount = 0\n      for (\n        var n = 0;\n        n < this.walletLocalData.unusedAddressIndex + GAP_LIMIT;\n        n++\n      ) {\n        const address = this.addressFromIndex(n)\n        const p = this.processAddressFromServer(address)\n        promiseArray.push(p)\n\n        if (this.walletLocalData.addressArray[n] == null) {\n          this.walletLocalData.addressArray[n] = { address }\n          this.walletLocalDataDirty = true\n        } else {\n          if (this.walletLocalData.addressArray[n].address !== address) {\n            throw new Error('Derived address mismatch on index ' + n)\n          }\n        }\n\n        console.log('checkAddressesInnerLoop: check ' + address)\n      }\n\n      if (promiseArray.length > 0) {\n        this.numAddressesChecked = 0\n        this.numAddressesToCheck = promiseArray.length\n        Promise.all(promiseArray)\n          .then(response => {\n            // Iterate over all the address balances and get a final balance\n            console.log(\n              'checkAddressesInnerLoop: Completed responses: ' + response.length\n            )\n\n            const arrayAmounts = response\n            var totalBalances = { TRD: 0 }\n            for (const n in arrayAmounts) {\n              const amountsObj = arrayAmounts[n]\n              for (const currencyCode in amountsObj) {\n                if (totalBalances[currencyCode] == null) {\n                  totalBalances[currencyCode] = 0\n                }\n                totalBalances[currencyCode] += amountsObj[currencyCode]\n                console.log(\n                  'checkAddressesInnerLoop: arrayAmounts[' +\n                    n +\n                    '][' +\n                    currencyCode +\n                    ']: ' +\n                    arrayAmounts[n][currencyCode] +\n                    ' total:' +\n                    totalBalances[currencyCode]\n                )\n              }\n            }\n            this.walletLocalData.totalBalances = totalBalances\n            this.walletLocalDataDirty = true\n\n            if (!this.addressesChecked) {\n              this.addressesChecked = true\n              this.abcTxLibCallbacks.addressesChecked(1)\n              this.numAddressesChecked = 0\n              this.numAddressesToCheck = 0\n            }\n            setTimeout(() => {\n              this.checkAddressesInnerLoop()\n            }, ADDRESS_POLL_MILLISECONDS)\n          })\n          .catch(e => {\n            console.log(\n              new Error('Error: checkAddressesInnerLoop: should not get here')\n            )\n            setTimeout(() => {\n              this.checkAddressesInnerLoop()\n            }, ADDRESS_POLL_MILLISECONDS)\n          })\n      } else {\n        setTimeout(() => {\n          this.checkAddressesInnerLoop()\n        }, ADDRESS_POLL_MILLISECONDS)\n      }\n    }\n  }\n\n  addressFromIndex (index) {\n    let addr = '' + index + '_' + this.walletLocalData.masterPublicKey\n\n    if (index === 0) {\n      addr = addr + '__600000' // Preload first addresss with some funds\n    }\n    return addr\n  }\n\n  processAddressFromServer (address) {\n    return this.fetchGet('address', address)\n      .then(function (response) {\n        return response.json()\n      })\n      .then(jsonObj => {\n        console.log('processAddressFromServer: response.json():')\n        console.log(jsonObj)\n        const txids = jsonObj.txids\n        const idx = this.findAddress(jsonObj.address)\n        if (idx === -1) {\n          throw new Error(\n            'Queried address not found in addressArray:' + jsonObj.address\n          )\n        }\n        this.walletLocalData.addressArray[idx] = jsonObj\n        this.walletLocalDataDirty = true\n\n        // Iterate over txids in address\n        for (var n in txids) {\n          // This address has transactions\n          const txid = txids[n]\n          console.log('processAddressFromServer: txid:' + txid)\n\n          if (\n            this.findTransaction(PRIMARY_CURRENCY, txid) === -1 &&\n            this.walletLocalData.transactionsToFetch.indexOf(txid) === -1\n          ) {\n            console.log(\n              'processAddressFromServer: txid not found. Adding:' + txid\n            )\n            this.walletLocalData.transactionsToFetch.push(txid)\n            this.walletLocalDataDirty = true\n\n            this.transactionsDirty = true\n          }\n        }\n\n        if (\n          (txids != null && txids.length) ||\n          this.walletLocalData.gapLimitAddresses.indexOf(jsonObj.address) !== -1\n        ) {\n          // Since this address is \"used\", make sure the unusedAddressIndex is incremented if needed\n          if (idx >= this.walletLocalData.unusedAddressIndex) {\n            this.walletLocalData.unusedAddressIndex = idx + 1\n            this.walletLocalDataDirty = true\n            console.log(\n              'processAddressFromServer: set unusedAddressIndex:' +\n                this.walletLocalData.unusedAddressIndex\n            )\n          }\n        }\n\n        this.numAddressesChecked++\n        const progress = this.numAddressesChecked / this.numAddressesToCheck\n\n        if (progress !== 1) {\n          this.abcTxLibCallbacks.addressesChecked(progress)\n        }\n\n        return jsonObj.amounts\n      })\n      .catch(e => {\n        console.log('Error fetching address: ' + address)\n        return 0\n      })\n  }\n\n  findTransaction (currencyCode, txid) {\n    if (this.walletLocalData.transactionsObj[currencyCode] == null) {\n      return -1\n    }\n\n    const currency = this.walletLocalData.transactionsObj[currencyCode]\n    return currency.findIndex(element => {\n      return element.txid === txid\n    })\n  }\n\n  findAddress (address) {\n    return this.walletLocalData.addressArray.findIndex(element => {\n      return element.address === address\n    })\n  }\n\n  sortTxByDate (a, b) {\n    return b.date - a.date\n  }\n\n  addTransaction (currencyCode, abcTransaction) {\n    // Add or update tx in transactionsObj\n    const idx = this.findTransaction(currencyCode, abcTransaction.txid)\n\n    if (idx === -1) {\n      console.log('addTransaction: adding and sorting:' + abcTransaction.txid)\n      this.walletLocalData.transactionsObj[currencyCode].push(abcTransaction)\n\n      // Sort\n      this.walletLocalData.transactionsObj[currencyCode].sort(this.sortTxByDate)\n      this.walletLocalDataDirty = true\n    } else {\n      // Update the transaction\n      this.walletLocalData.transactionsObj[currencyCode][idx] = abcTransaction\n      this.walletLocalDataDirty = true\n      console.log('addTransaction: updating:' + abcTransaction.txid)\n    }\n    this.transactionsChangedArray.push(abcTransaction)\n  }\n\n  // *************************************\n  // Save the wallet data store\n  // *************************************\n  saveWalletDataStore () {\n    if (this.engineOn) {\n      if (this.walletLocalDataDirty) {\n        const walletJson = JSON.stringify(this.walletLocalData)\n        this.walletLocalDataStore\n          .writeData(DATA_STORE_FOLDER, 'walletLocalData', walletJson)\n          .then(result => {\n            this.walletLocalDataDirty = false\n            setTimeout(() => {\n              this.saveWalletDataStore()\n            }, SAVE_DATASTORE_MILLISECONDS)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n      }\n    }\n  }\n\n  // *************************************\n  // Public methods\n  // *************************************\n\n  startEngine () {\n    const prom = new Promise((resolve, reject) => {\n      this.walletLocalDataStore\n        .readData(DATA_STORE_FOLDER, 'walletLocalData')\n        .then(result => {\n          this.walletLocalData = new WalletLocalData(result)\n          this.walletLocalData.masterPublicKey = this.abcTxLibOptions.masterPublicKey\n          this.engineLoop()\n          resolve()\n        })\n        .catch(err => {\n          console.log(err)\n          console.log('No walletLocalData setup yet: Failure is ok')\n          this.walletLocalData = new WalletLocalData(null)\n          this.walletLocalData.masterPublicKey = this.abcTxLibOptions.masterPublicKey\n          this.walletLocalDataStore\n            .writeData(\n              DATA_STORE_FOLDER,\n              'walletLocalData',\n              JSON.stringify(this.walletLocalData)\n            )\n            .then(result => {\n              this.engineLoop()\n              resolve()\n            })\n            .catch(err => {\n              console.log('Error writing to localDataStore:' + err)\n              resolve()\n            })\n        })\n    })\n\n    return prom\n  }\n\n  killEngine () {\n    // disconnect network connections\n    // clear caches\n\n    this.engineOn = false\n\n    return true\n  }\n\n  // synchronous\n  getBlockHeight () {\n    return this.walletLocalData.blockHeight\n  }\n\n  // asynchronous\n  enableTokens (tokens = []) {\n    for (const n in tokens) {\n      const token = tokens[n]\n      if (this.walletLocalData.enabledTokens.indexOf(token) !== -1) {\n        this.walletLocalData.enabledTokens.push(token)\n      }\n    }\n    // return Promise.resolve(dataStore.enableTokens(tokens))\n  }\n\n  // synchronous\n  getTokenStatus () {\n    // return dataStore.getTokensStatus()\n  }\n\n  // synchronous\n  getBalance (options = {}) {\n    let currencyCode = PRIMARY_CURRENCY\n    if (options.currencyCode != null) {\n      currencyCode = options.currencyCode\n    }\n\n    return this.walletLocalData.totalBalances[currencyCode]\n  }\n\n  // synchronous\n  getNumTransactions (options = {}) {\n    let currencyCode = PRIMARY_CURRENCY\n    if (options != null && options.currencyCode != null) {\n      currencyCode = options.currencyCode\n    }\n    return this.walletLocalData.transactionsObj[currencyCode].length\n  }\n\n  // asynchronous\n  getTransactions (options = {}) {\n    let currencyCode = PRIMARY_CURRENCY\n    if (options != null && options.currencyCode != null) {\n      currencyCode = options.currencyCode\n    }\n    const prom = new Promise((resolve, reject) => {\n      let startIndex = 0\n      let numEntries = 0\n      if (options == null) {\n        resolve(this.walletLocalData.transactionsObj[currencyCode].slice(0))\n        return\n      }\n      if (options.startIndex != null && options.startIndex > 0) {\n        startIndex = options.startIndex\n        if (\n          startIndex >=\n          this.walletLocalData.transactionsObj[currencyCode].length\n        ) {\n          startIndex =\n            this.walletLocalData.transactionsObj[currencyCode].length - 1\n        }\n      }\n      if (options.numEntries != null && options.numEntries > 0) {\n        numEntries = options.numEntries\n        if (\n          numEntries + startIndex >\n          this.walletLocalData.transactionsObj[currencyCode].length\n        ) {\n          // Don't read past the end of the transactionsObj\n          numEntries =\n            this.walletLocalData.transactionsObj[currencyCode].length -\n            startIndex\n        }\n      }\n\n      // Copy the appropriate entries from the arrayTransactions\n      let returnArray = []\n\n      if (numEntries) {\n        returnArray = this.walletLocalData.transactionsObj[currencyCode].slice(\n          startIndex,\n          numEntries + startIndex\n        )\n      } else {\n        returnArray = this.walletLocalData.transactionsObj[currencyCode].slice(\n          startIndex\n        )\n      }\n      resolve(returnArray)\n    })\n\n    return prom\n  }\n\n  // synchronous\n  getFreshAddress (options = {}) {\n    // Algorithm to derive master pub key from master private key\n    //  master public key = \"pub[masterPrivateKey]\". ie. \"pub294709fe7a0sb0c8f7398f\"\n    // Algorithm to drive an address from index is \"[index]-[masterPublicKey]\" ie. \"102-pub294709fe7a0sb0c8f7398f\"\n    return this.addressFromIndex(this.walletLocalData.unusedAddressIndex)\n  }\n\n  // synchronous\n  addGapLimitAddresses (addresses, options) {\n    for (var i in addresses) {\n      if (this.walletLocalData.gapLimitAddresses.indexOf(addresses[i]) === -1) {\n        this.walletLocalData.gapLimitAddresses.push(addresses[i])\n      }\n    }\n  }\n\n  // synchronous\n  isAddressUsed (address, options = {}) {\n    let idx = this.findAddress(address)\n    if (idx !== -1) {\n      const addrObj = this.walletLocalData.addressArray[idx]\n      if (addrObj != null) {\n        if (addrObj.txids.length > 0) {\n          return true\n        }\n      }\n    }\n    idx = this.walletLocalData.gapLimitAddresses.indexOf(address)\n    if (idx !== -1) {\n      return true\n    }\n    return false\n  }\n\n  // synchronous\n  makeSpend (abcSpendInfo) {\n    // returns an ABCTransaction data structure, and checks for valid info\n    const prom = new Promise((resolve, reject) => {\n      // ******************************\n      // Get the fee amount\n      let networkFee = 50000\n      if (abcSpendInfo.networkFeeOption === 'high') {\n        networkFee += 10000\n      } else if (abcSpendInfo.networkFeeOption === 'low') {\n        networkFee -= 10000\n      } else if (abcSpendInfo.networkFeeOption === 'custom') {\n        if (\n          abcSpendInfo.customNetworkFee == null ||\n          abcSpendInfo.customNetworkFee <= 0\n        ) {\n          reject(new Error('Invalid custom fee'))\n          return\n        } else {\n          networkFee = abcSpendInfo.customNetworkFee\n        }\n      }\n\n      // ******************************\n      // Calculate the total to send\n      let totalSpends = {}\n      totalSpends[PRIMARY_CURRENCY] = 0\n      let outputs = []\n      const spendTargets = abcSpendInfo.spendTargets\n\n      for (let n in spendTargets) {\n        const spendTarget = spendTargets[n]\n        if (spendTarget.amountSatoshi <= 0) {\n          reject(new Error('Error: invalid spendTarget amount'))\n          return\n        }\n        let currencyCode = PRIMARY_CURRENCY\n        if (spendTarget.currencyCode != null) {\n          currencyCode = spendTarget.currencyCode\n        }\n        if (totalSpends[currencyCode] == null) {\n          totalSpends[currencyCode] = 0\n        }\n        totalSpends[currencyCode] += spendTarget.amountSatoshi\n        outputs.push({\n          currencyCode,\n          address: spendTarget.publicAddress,\n          amount: spendTarget.amountSatoshi\n        })\n      }\n      totalSpends[PRIMARY_CURRENCY] += networkFee\n\n      for (const n in totalSpends) {\n        const totalSpend = totalSpends[n]\n        // XXX check if spends exceed totals\n        if (totalSpend > this.walletLocalData.totalBalances[n]) {\n          reject(new Error('Error: insufficient balance for token:' + n))\n          return\n        }\n      }\n\n      // ****************************************************\n      // Pick inputs. Picker will use all funds in an address\n      let totalInputAmounts = {}\n      let inputs = []\n      const addressArray = this.walletLocalData.addressArray\n      // Get a new address for change if needed\n      const changeAddress = this.addressFromIndex(\n        this.walletLocalData.unusedAddressIndex\n      )\n\n      for (let currencyCode in totalSpends) {\n        for (let n in addressArray) {\n          let addressObj = addressArray[n]\n          if (addressObj.amounts[currencyCode] > 0) {\n            if (totalInputAmounts[currencyCode] == null) {\n              totalInputAmounts[currencyCode] = 0\n            }\n\n            totalInputAmounts[currencyCode] += addressObj.amounts[currencyCode]\n            inputs.push({\n              currencyCode,\n              address: addressObj.address,\n              amount: addressObj.amounts[currencyCode]\n            })\n          }\n          if (totalInputAmounts[currencyCode] >= totalSpends[currencyCode]) {\n            break\n          }\n        }\n\n        if (totalInputAmounts[currencyCode] < totalSpends[currencyCode]) {\n          reject(\n            new Error('Error: insufficient funds for token:' + currencyCode)\n          )\n          return\n        }\n        if (totalInputAmounts[currencyCode] > totalSpends[currencyCode]) {\n          outputs.push({\n            currencyCode,\n            address: changeAddress,\n            amount: totalInputAmounts[currencyCode] - totalSpends[currencyCode]\n          })\n        }\n      }\n\n      // **********************************\n      // Create the unsigned ABCTransaction\n      const abcTransaction = new ABCTransaction(\n        null,\n        null,\n        null,\n        null,\n        totalSpends[PRIMARY_CURRENCY],\n        networkFee,\n        null,\n        { inputs, outputs }\n      )\n\n      resolve(abcTransaction)\n    })\n    return prom\n  }\n\n  // asynchronous\n  signTx (abcTransaction) {\n    const prom = new Promise((resolve, reject) => {\n      abcTransaction.signedTx = 'iwassignedjusttrustme'\n      resolve(abcTransaction)\n    })\n\n    return prom\n  }\n\n  // asynchronous\n  broadcastTx (abcTransaction) {\n    const prom = new Promise((resolve, reject) => {\n      this.fetchPost('spend', abcTransaction.otherParams)\n        .then(function (response) {\n          return response.json()\n        })\n        .then(jsonObj => {\n          // Copy params from returned transaction object to our abcTransaction object\n          abcTransaction.blockHeight = jsonObj.blockHeight\n          abcTransaction.txid = jsonObj.txid\n          abcTransaction.date = jsonObj.txDate\n          resolve(abcTransaction)\n        })\n        .catch(e => {\n          reject(new Error('Error: broadcastTx failed'))\n        })\n    })\n    return prom\n  }\n\n  // asynchronous\n  saveTx (abcTransaction) {\n    const prom = new Promise((resolve, reject) => {\n      resolve(abcTransaction)\n    })\n\n    return prom\n  }\n}\n"],"names":["const","this","idx","let","n","addr","ccode","currencyCode"],"mappings":"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"}